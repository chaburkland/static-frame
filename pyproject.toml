[tool.isort]
line_length = 200
force_single_line = true

[tool.ruff]
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "doc/source"
]

[tool.ruff.lint]
ignore = ["F841",
    "E741", # ambiguous variable names
    "E731", # assigning lambdas
    "E721", # type-comparison
    "E712", # equality comparisons with True
    "E711", # equality comparison to None
    "E701", # multiple statements
    "F401", # unused imports
    "ICN001", # pandas imports
    ]
select = [
    "F",   # Pyflakes
    # "W",   # "E/W" pycodestyle
    # "UP",  # pyupgrade
    # "B",   # flake8-bugbear
    "T10", # flake8-debugger
    "EXE", # flake8-executable
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    # "RSE", # flake8-raise
    "TCH", # flake8-type-checking
    # "PGH", # pygrep-hooks
    # "PL",  # Pylint
    # "NPY", # NumPy-specific rules
    # "RUF", # Ruff-specific rules

    # individual rules
    "S307",   # flake8-bandit [suspicious-eval-usage]
]



[tool.ruff.lint.per-file-ignores]
"doc/build_example.py" = ["E402"]


[tool.pyright]
exclude = [
    "**/__pycache__",
    "doc/**",
    "static_frame/profile",
    "static_frame/core/display_visidata.py",
    "static_frame/test/property",
    "static_frame/test/unit",
    "static_frame/test/integration",
]

typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnboundVariable = "none"
reportInvalidTypeVarUse = false
pythonVersion = "3.11"
pythonPlatform = "Linux"


[tool.mypy]
files = "static_frame/**/*.py"
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
warn_return_any = true
warn_unused_configs = true
disable_error_code = "misc"

[[tool.mypy.overrides]]
module = [
    "IPython",
    "openpyxl",
    "pandas",
    "pyarrow",
    "pyarrow.*",
    "pytest",
    "setuptools",
    "sphinx.*",
    "sphinx_rtd_theme",
    "scipy.*",
    "tables",
    "xarray",
    "xlsxwriter.*",
    "arraymap",
    "frame_fixtures",
    ]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "doc.*",
    "static_frame.profile.*",
    "static_frame.core.display_visidata",
    "static_frame.test.property.*",
    "static_frame.test.unit.*",
    "static_frame.test.integration.*",
    ]
ignore_errors = true

